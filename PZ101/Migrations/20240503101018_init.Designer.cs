// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PZ101.Context;

#nullable disable

namespace PZ101.Migrations
{
    [DbContext(typeof(MedicCentreContext))]
    [Migration("20240503101018_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PZ101.Context.Doctors", b =>
                {
                    b.Property<Guid>("IDDoctors")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FIODoctors")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberDoctors")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDDoctors");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("PZ101.Context.Pacient", b =>
                {
                    b.Property<Guid>("IDPacient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FIOPacient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenderPacient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDPacient");

                    b.ToTable("Pacients");
                });
#pragma warning restore 612, 618
        }
    }
}
